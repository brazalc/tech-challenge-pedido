// <auto-generated />
using System;
using G64.ProdutoApi.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace G64.ProdutoApi.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240520030015_Inicial")]
    partial class Inicial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("ComboProduto", b =>
                {
                    b.Property<Guid>("CombosId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("ProdutosId")
                        .HasColumnType("char(36)");

                    b.HasKey("CombosId", "ProdutosId");

                    b.HasIndex("ProdutosId");

                    b.ToTable("ComboProduto");

                    b.HasData(
                        new
                        {
                            CombosId = new Guid("19530dee-cb23-435b-806e-1894442cfa62"),
                            ProdutosId = new Guid("373e83fb-423c-47f4-b612-0932d8a2e248")
                        },
                        new
                        {
                            CombosId = new Guid("19530dee-cb23-435b-806e-1894442cfa62"),
                            ProdutosId = new Guid("da1eb2b2-e055-48c9-af2e-28ef31c4da33")
                        },
                        new
                        {
                            CombosId = new Guid("19530dee-cb23-435b-806e-1894442cfa62"),
                            ProdutosId = new Guid("2a4b6d82-eed1-4893-900d-cbf6d4b609f9")
                        },
                        new
                        {
                            CombosId = new Guid("0e43e883-5d79-4169-a7a9-353bba0247db"),
                            ProdutosId = new Guid("373e83fb-423c-47f4-b612-0932d8a2e248")
                        },
                        new
                        {
                            CombosId = new Guid("0e43e883-5d79-4169-a7a9-353bba0247db"),
                            ProdutosId = new Guid("da1eb2b2-e055-48c9-af2e-28ef31c4da33")
                        });
                });

            modelBuilder.Entity("G64.ProdutoApi.Models.Combo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.ToTable("Combos");

                    b.HasData(
                        new
                        {
                            Id = new Guid("19530dee-cb23-435b-806e-1894442cfa62")
                        },
                        new
                        {
                            Id = new Guid("0e43e883-5d79-4169-a7a9-353bba0247db")
                        });
                });

            modelBuilder.Entity("G64.ProdutoApi.Models.Ingrediente", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<Guid?>("ProdutoId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("ProdutoId");

                    b.ToTable("Ingredientes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("472fa4a4-cc5e-4c29-9a6b-a05166e0e29f"),
                            Descricao = "Tomate"
                        },
                        new
                        {
                            Id = new Guid("dd20facb-f422-4927-82c3-8255d97984ec"),
                            Descricao = "Hamburguer"
                        });
                });

            modelBuilder.Entity("G64.ProdutoApi.Models.Produto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<decimal>("Preco")
                        .HasPrecision(12, 2)
                        .HasColumnType("decimal(12,2)");

                    b.Property<int>("Tipo")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Produtos");

                    b.HasData(
                        new
                        {
                            Id = new Guid("373e83fb-423c-47f4-b612-0932d8a2e248"),
                            Descricao = "Carne bovina",
                            Nome = "Whopper",
                            Preco = 15.99m,
                            Tipo = 0
                        },
                        new
                        {
                            Id = new Guid("da1eb2b2-e055-48c9-af2e-28ef31c4da33"),
                            Descricao = "Refrigerante",
                            Nome = "Coca-cola",
                            Preco = 5.99m,
                            Tipo = 1
                        },
                        new
                        {
                            Id = new Guid("2a4b6d82-eed1-4893-900d-cbf6d4b609f9"),
                            Descricao = "Batata",
                            Nome = "Batata Frita",
                            Preco = 7.99m,
                            Tipo = 2
                        });
                });

            modelBuilder.Entity("ComboProduto", b =>
                {
                    b.HasOne("G64.ProdutoApi.Models.Combo", null)
                        .WithMany()
                        .HasForeignKey("CombosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("G64.ProdutoApi.Models.Produto", null)
                        .WithMany()
                        .HasForeignKey("ProdutosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("G64.ProdutoApi.Models.Ingrediente", b =>
                {
                    b.HasOne("G64.ProdutoApi.Models.Produto", null)
                        .WithMany("Ingredientes")
                        .HasForeignKey("ProdutoId");
                });

            modelBuilder.Entity("G64.ProdutoApi.Models.Produto", b =>
                {
                    b.Navigation("Ingredientes");
                });
#pragma warning restore 612, 618
        }
    }
}
